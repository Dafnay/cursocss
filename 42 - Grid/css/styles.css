/* GRID - FUNDAMENTOS

*Es un modelo de layout que permite construir cuadriculas 
dinamicas, es un valor de la propiedad display.

*al igual que flexbox, tenemos 
        display: grid y display:inline-grid 

*Se necesita un contenedor(grid-container) y al menos un hijo (grid-item)
*Las celdas son los items, el contenedor es el contexto al que pertenecen los items.


TERMINOLOGIA

-Grid column: columna de nuestra cuadricula
-Grid row: la fila de nuestra columna
-Grid cell: La celda de la cuadrícula
-Grid-gap: Separación entre celdas
-Grid line: lineas que delimitan cada columna/fila (column lines y row lines)

VENTAJAS DE USAR GRID

Cada celda es dinámica y el resto se adapta
Podemos decir donde empieza y donde acaba cada celda, tanto en columna como fila
Posibilidades inmensas

PARA ORDENAR ELEMENTOS
    CON GRID-COLUMN Y GRID-ROW

    grid-column-start
    grid-column-end
    grid-row-start
    grid-row-end

Existe un shortjand que engloba las 2 propiedades:
grid-column: start/end
grid-row: start/end

tanto start como end admiten valores positivos, negativos y la palabra span

tip: si ponemos el valor end -1 llegará hasta el final

*/

body{
    display:flex;
    align-items: center;
    justify-content: center;
    margin: 0;
    height: 100vh;
    color: #eee;
    font-family: sans-serif;
    background-image: radial-gradient(circle, #b94bf8, #3a1957);
    background-repeat: no-repeat;
}

.grid-container {
    display: grid;
    grid-template-columns: 100px 100px 100px 100px;
    grid-template-rows: 100px 100px 100px 100px;
    /* grid-gap: 10px; */
}

.grid-item {
    border: 1px solid;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 1rem;
    font-size: 2rem;
}
.grid-item:nth-child(3),
.grid-item:nth-child(4){
    background: orange;
}

.grid-item:first-child,
.grid-item:nth-child(2) {
    background: violet;
}

.grid-item:nth-child(4) {
    grid-column-start: 1;
    /* grid-column-end: 2; */
    grid-row-start: 1;
    /* grid-row-end: 2; */
}
.grid-item:nth-child(3) {
    grid-column-start: 3;
    grid-row-start: 1;
    grid-row-end: 3;
}
.grid-item:nth-child(2) {
    /* grid-column-start: 1;
    grid-column-end: 3;
    grid-row-start: 2;
    grid-row-end: 4; */
    grid-column: 1/ 3;
    grid-row: 2/ 4;
}